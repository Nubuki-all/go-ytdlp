// Copyright (c) Liam Stanley <me@liamstanley.io>. All rights reserved. Use
// of this source code is governed by the MIT license that can be found in
// the LICENSE file.
//
// Code generated by cmd/codegen. DO NOT EDIT.

package ytdlp

import (
	"sync"
)

func New() *Command {
	cmd := &Command{env: make(map[string]string)}

{{ range $index, $group := .OptionGroups }}
{{- $id :=  .Name | to_camel | trimSuffix "s" }}
    cmd.{{ $id }} = &{{ $id }}Builder{parent: cmd}
{{- end }}

    return cmd
}

type Command struct {
{{- range $index, $group := .OptionGroups }}
{{- $id :=  .Name | to_camel | trimSuffix "s" }}
    // {{ .Name }} Option Group
    {{- if .Description }}
    {{- $desc := splitList "\n" (wrap 80 .Description) }}
    {{- range $line := $desc }}
    //   {{ $line }}
    {{- end }}{{/* end range for desc */}}
    {{- end }} {{/* end if description */}}
    {{ $id }} *{{ $id }}Builder
{{- end }}

    mu         sync.RWMutex
    executable string
    directory  string
    env        map[string]string
    flags      []*Flag
}

func (c *Command) Clone() *Command {
    // TODO
    return &Command{}
}
