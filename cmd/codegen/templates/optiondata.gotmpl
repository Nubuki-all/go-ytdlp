// Copyright (c) Liam Stanley <liam@liam.sh>. All rights reserved. Use of
// this source code is governed by the MIT license that can be found in
// the LICENSE file.
//
// Code generated by cmd/codegen. DO NOT EDIT.

package optiondata

// Groups contains is a list of all the option groups.
var Groups = []*OptionGroup{
    {{- range $group := .OptionGroups }}
        group{{ $group.Name | to_camel }},
    {{- end }}
}

// Underlying option groups.
var (
    {{- range $group := .OptionGroups }}
        group{{ $group.Name | to_camel }} = &OptionGroup{
            Name: {{ $group.Name | quote }},
            {{- if $group.Description }}
            Description: {{ $group.Description | quote }},
            {{- end }}
            Options: []*Option{
                {{- range $option := $group.Options }}
                    option{{ $option.Name | to_camel }},
                {{- end }}
            },
        }
    {{- end }}
)

// Options contains a list of all options.
var Options = []*Option{
    {{- range $group := .OptionGroups }}
        {{- range $option := $group.Options }}
            option{{ $option.Name | to_camel }},
        {{- end }}
    {{- end }}
}

// Underlying options.
var (
    {{- range $group := .OptionGroups }}
        {{- range $option := $group.Options }}
            option{{ $option.Name | to_camel }} = &Option{
                {{- if $option.ID }}
                ID: {{ $option.ID | quote }},
                {{- end }}
                Name: {{ $option.Name | quote }},
                NameCamelCase: {{ $option.Name | to_lower_camel | quote }},
                NamePascalCase: {{ $option.Name | to_camel | quote }},
                {{- if $option.URLs }}
                URLs: []*OptionURL{
                    {{- range $url := $option.URLs }}
                        {
                            Name: {{ $url.Name | quote }},
                            URL: {{ $url.URL | quote }},
                        },
                    {{- end }}
                },
                {{- end }}
                DefaultFlag: {{ $option.Flag | quote }},
                {{- if and (gt $option.NArgs 0) ($option.ArgNames) }}
                ArgNames: []string{ {{- range $arg := $option.ArgNames }}{{ $arg | quote }},{{- end }} },
                {{- end }}
                Executable: {{ if $option.Executable }}true{{ else }}false{{ end }},
                {{- if $option.Deprecated }}
                Deprecated: {{ $option.Deprecated | quote }},
                {{- end }}
                {{- if $option.Choices }}
                Choices: []string{ {{- range $choice := $option.Choices }}{{ $choice | quote }},{{- end }} },
                {{- end }}
                {{- if $option.Help }}
                Help: {{ $option.Help | quote}},
                {{- end }}
                {{- if $option.Hidden }}
                Hidden: true,
                {{- end }}
                {{- if $option.MetaArgs }}
                MetaArgs: {{ $option.MetaArgs | quote }},
                {{- end }}
                Type: {{ $option.Type | quote }},
                {{- if $option.LongFlags }}
                LongFlags: []string{ {{- range $flag := $option.LongFlags }}{{ $flag | quote }},{{- end }} },
                {{- end }}
                {{- if $option.ShortFlags }}
                ShortFlags: []string{ {{- range $flag := $option.ShortFlags }}{{ $flag | quote }},{{- end }} },
                {{- end }}
                {{- if $option.NArgs }}
                NArgs: {{ $option.NArgs }},
                {{- end }}
            }
        {{- end }}
    {{- end }}
)
