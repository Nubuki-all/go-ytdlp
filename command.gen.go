// Copyright (c) Liam Stanley <me@liamstanley.io>. All rights reserved. Use
// of this source code is governed by the MIT license that can be found in
// the LICENSE file.
//
// Code generated by cmd/codegen. DO NOT EDIT.

package ytdlp

import (
	"sync"
)

func New() *Command {
	cmd := &Command{}

	cmd.General = &GeneralBuilder{parent: cmd}
	cmd.Network = &NetworkBuilder{parent: cmd}
	cmd.GeoRestriction = &GeoRestrictionBuilder{parent: cmd}
	cmd.VideoSelection = &VideoSelectionBuilder{parent: cmd}
	cmd.Download = &DownloadBuilder{parent: cmd}
	cmd.Filesystem = &FilesystemBuilder{parent: cmd}
	cmd.Thumbnail = &ThumbnailBuilder{parent: cmd}
	cmd.InternetShortcut = &InternetShortcutBuilder{parent: cmd}
	cmd.VerbositySimulation = &VerbositySimulationBuilder{parent: cmd}
	cmd.Workaround = &WorkaroundBuilder{parent: cmd}
	cmd.VideoFormat = &VideoFormatBuilder{parent: cmd}
	cmd.Subtitle = &SubtitleBuilder{parent: cmd}
	cmd.Authentication = &AuthenticationBuilder{parent: cmd}
	cmd.PostProcessing = &PostProcessingBuilder{parent: cmd}
	cmd.SponsorBlock = &SponsorBlockBuilder{parent: cmd}
	cmd.Extractor = &ExtractorBuilder{parent: cmd}

	return cmd
}

type Command struct {
	// General Option Group
	General *GeneralBuilder
	// Network Option Group
	Network *NetworkBuilder
	// Geo-restriction Option Group
	GeoRestriction *GeoRestrictionBuilder
	// Video Selection Option Group
	VideoSelection *VideoSelectionBuilder
	// Download Option Group
	Download *DownloadBuilder
	// Filesystem Option Group
	Filesystem *FilesystemBuilder
	// Thumbnail Option Group
	Thumbnail *ThumbnailBuilder
	// Internet Shortcut Option Group
	InternetShortcut *InternetShortcutBuilder
	// Verbosity Simulation Option Group
	VerbositySimulation *VerbositySimulationBuilder
	// Workarounds Option Group
	Workaround *WorkaroundBuilder
	// Video Format Option Group
	VideoFormat *VideoFormatBuilder
	// Subtitle Option Group
	Subtitle *SubtitleBuilder
	// Authentication Option Group
	Authentication *AuthenticationBuilder
	// Post-Processing Option Group
	PostProcessing *PostProcessingBuilder
	// SponsorBlock Option Group
	//   Make chapter entries for, or remove various segments (sponsor, introductions,
	//   etc.) from downloaded YouTube videos using the SponsorBlock API
	//   (https://sponsor.ajay.app)
	SponsorBlock *SponsorBlockBuilder
	// Extractor Option Group
	Extractor *ExtractorBuilder

	mu    sync.RWMutex
	flags []*Flag
}

func (c *Command) Clone() *Command {
	// TODO
	return &Command{}
}
