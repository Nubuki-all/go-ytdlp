// Copyright (c) Liam Stanley <me@liamstanley.io>. All rights reserved. Use
// of this source code is governed by the MIT license that can be found in
// the LICENSE file.
//
// Code generated by cmd/codegen. DO NOT EDIT.
//
// SponsorBlock Option Group -- Description:
//   Make chapter entries for, or remove various segments (sponsor, introductions,
//   etc.) from downloaded YouTube videos using the SponsorBlock API
//   (https://sponsor.ajay.app)

package ytdlp

type SponsorBlockBuilder struct {
	parent *Command
}

// Then jumps back to the base command builder, if you want to add additional flags
// from another flag builder.
func (ff *SponsorBlockBuilder) Then() *Command {
	return ff.parent
}

// An output template for the title of the SponsorBlock chapters created by
// --sponsorblock-mark. The only available fields are start_time, end_time,
// category, categories, name, category_names. Defaults to "%default"
//
// SponsorblockChapterTitle maps to cli flags: --sponsorblock-chapter-title=TEMPLATE.
func (ff *SponsorBlockBuilder) SponsorblockChapterTitle(template string) *SponsorBlockBuilder {
	ff.parent.addFlag(&Flag{
		ID:   "sponsorblock_chapter_title",
		Flag: "--sponsorblock-chapter-title",
		Args: []string{template},
	})
	return ff
}

// Disable both --sponsorblock-mark and --sponsorblock-remove
//
// NoSponsorblock maps to cli flags: --no-sponsorblock.
func (ff *SponsorBlockBuilder) NoSponsorblock() *SponsorBlockBuilder {
	ff.parent.addFlag(&Flag{
		ID:   "no_sponsorblock",
		Flag: "--no-sponsorblock",
		Args: nil,
	})
	return ff
}

// SponsorBlock API location, defaults to %default
//
// SponsorblockApi maps to cli flags: --sponsorblock-api=URL.
func (ff *SponsorBlockBuilder) SponsorblockApi(url string) *SponsorBlockBuilder {
	ff.parent.addFlag(&Flag{
		ID:   "sponsorblock_api",
		Flag: "--sponsorblock-api",
		Args: []string{url},
	})
	return ff
}

// Sponskrub sets the "sponskrub" flag to "true".
//
// Sponskrub maps to cli flags: --sponskrub.
func (ff *SponsorBlockBuilder) Sponskrub() *SponsorBlockBuilder {
	ff.parent.addFlag(&Flag{
		ID:   "sponskrub",
		Flag: "--sponskrub",
		Args: nil,
	})
	return ff
}

// NoSponskrub sets the "no-sponskrub" flag to "false".
//
// NoSponskrub maps to cli flags: --no-sponskrub.
func (ff *SponsorBlockBuilder) NoSponskrub() *SponsorBlockBuilder {
	ff.parent.addFlag(&Flag{
		ID:   "sponskrub",
		Flag: "--no-sponskrub",
		Args: nil,
	})
	return ff
}

// SponskrubCut sets the "sponskrub-cut" flag to "true".
//
// SponskrubCut maps to cli flags: --sponskrub-cut.
func (ff *SponsorBlockBuilder) SponskrubCut() *SponsorBlockBuilder {
	ff.parent.addFlag(&Flag{
		ID:   "sponskrub_cut",
		Flag: "--sponskrub-cut",
		Args: nil,
	})
	return ff
}

// NoSponskrubCut sets the "no-sponskrub-cut" flag to "false".
//
// NoSponskrubCut maps to cli flags: --no-sponskrub-cut.
func (ff *SponsorBlockBuilder) NoSponskrubCut() *SponsorBlockBuilder {
	ff.parent.addFlag(&Flag{
		ID:   "sponskrub_cut",
		Flag: "--no-sponskrub-cut",
		Args: nil,
	})
	return ff
}

// SponskrubForce sets the "sponskrub-force" flag to "true".
//
// SponskrubForce maps to cli flags: --sponskrub-force.
func (ff *SponsorBlockBuilder) SponskrubForce() *SponsorBlockBuilder {
	ff.parent.addFlag(&Flag{
		ID:   "sponskrub_force",
		Flag: "--sponskrub-force",
		Args: nil,
	})
	return ff
}

// NoSponskrubForce sets the "no-sponskrub-force" flag to "true".
//
// NoSponskrubForce maps to cli flags: --no-sponskrub-force.
func (ff *SponsorBlockBuilder) NoSponskrubForce() *SponsorBlockBuilder {
	ff.parent.addFlag(&Flag{
		ID:   "sponskrub_force",
		Flag: "--no-sponskrub-force",
		Args: nil,
	})
	return ff
}

// SponskrubLocation maps to cli flags: --sponskrub-location=PATH.
func (ff *SponsorBlockBuilder) SponskrubLocation(path string) *SponsorBlockBuilder {
	ff.parent.addFlag(&Flag{
		ID:   "sponskrub_path",
		Flag: "--sponskrub-location",
		Args: []string{path},
	})
	return ff
}

// SponskrubArgs maps to cli flags: --sponskrub-args=ARGS.
func (ff *SponsorBlockBuilder) SponskrubArgs(args string) *SponsorBlockBuilder {
	ff.parent.addFlag(&Flag{
		ID:   "sponskrub_args",
		Flag: "--sponskrub-args",
		Args: []string{args},
	})
	return ff
}
